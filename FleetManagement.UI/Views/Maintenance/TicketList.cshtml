@using FleetManagement.UI.Models.Dto

@model List<MaintenanceTicket>




<div class="container-fluid">
    <div class="font-weight-medium shadow-none position-relative overflow-hidden mb-7">
        <div class="card-body px-0">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="font-weight-medium fs-14 mb-0">Basic Table</h4>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a class="text-muted text-decoration-none" href="#">
                                    Home
                                </a>
                            </li>
                            <li class="breadcrumb-item text-muted" aria-current="page">Basic Table</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>

    <div class="card w-100 position-relative overflow-hidden">
        <div class="px-4 py-3 border-bottom">
            <h4 class="card-title mb-0">Maintenance List</h4>
        </div>
        <div class="card-body p-4">

            <div class="d-md-flex align-items-center">
                <div>
                    <h4 class="card-title">All Maintenance Tickets</h4>
                    <p class="card-subtitle">Total Number of tickets: <strong>@ViewBag.TotalTickets</strong></p>
                </div>
            </div>
            <div class="mt-3">
                <a asp-action="AddTicket" class="btn btn-primary">
                    <i class="ri-add-line"></i> Add New Ticket
                </a>
            </div>

            <br />
            <div class="table-responsive mb-4 border rounded-1">
                <table class="table text-nowrap mb-0 align-middle">
                    <thead class="text-dark fs-4">
                        <tr>
                            <th>
                                <h6 class="fs-4 fw-semibold mb-0">Ticket Number</h6>
                            </th>
                            <th>
                                <h6 class="fs-4 fw-semibold mb-0">Items</h6>
                            </th>
                            <th>
                                <h6 class="fs-4 fw-semibold mb-0">Total Quantity</h6>
                            </th>
                            <th>
                                <h6 class="fs-4 fw-semibold mb-0">Total Cost</h6>
                            </th>
                            <th>
                                <h6 class="fs-4 fw-semibold mb-0">Date Logged</h6>
                            </th>

                            <th>
                                <h6 class="fs-4 fw-semibold mb-0">Status</h6>
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var ticket in Model)
                        {
                            <tr>
                                <td>
                                    <h6 class="fw-semibold mb-0">@ticket.TicketNumber</h6>
                                </td>
                                <td>
                                    <h6 class="mb-0">
                                        @if (ticket.Items.Count > 0)
                                        {
                                            @for (int i = 0; i < Math.Min(2, ticket.Items.Count); i++)
                                            {
                                                <p>@ticket.Items[i].Part - @ticket.Items[i].Quantity pcs</p>
                                            }

                                            if (ticket.Items.Count > 2)
                                            {
                                                <!-- Properly Serialize JSON using @@JsonSerializer.Serialize -->
                                                <a href="javascript:void(0)" class="view-items text-primary"
                                                   data-bs-toggle="modal" data-bs-target="#viewItemsModal"
                                                   data-ticket-id="@ticket.TicketNumber"
                                                   data-items='@Html.Raw(System.Text.Json.JsonSerializer.Serialize(ticket.Items))'>
                                                    View Items
                                                </a>
                                            }
                                        }
                                        else
                                        {
                                            <p>No Items</p>
                                        }
                                    </h6>
                                </td>

                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="ms-3">
                                            <span class="fw-normal">@ticket.TotalQuantity</span>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="ms-3">
                                            <h6 class="fs-4 fw-semibold mb-0">₦@ticket.TotalCost.ToString("N2")</h6>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <span class="text-muted">
                                        @ticket.DateLogged.ToString("dd MMM yyyy HH:mm")
                                    </span>
                                </td> <!-- FORMAT DATE -->

                                <td>
                                    @if (ticket.IsApproved)
                                    {
                                        <span class="badge bg-success">Approved</span>
                                    }
                                    else if (ticket.IsRejected)
                                    {
                                        <span class="badge bg-danger">Rejected</span>
                                    }
                                    else if (ticket.IsOnHold)
                                    {
                                        <span class="badge bg-secondary">On Hold</span>
                                    }
                                    else if (ticket.IsSubmitted)
                                    {
                                        <span class="badge bg-warning">Pending</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-info">Draft</span>
                                    }

                                </td>
                                <td>
                                    @if (ticket.IsApproved)
                                    {
                                        <span class="round text-white hstack justify-content-center text-center rounded-circle text-bg-success">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle">
                                                <path d="M9 12l2 2 4-4"></path>
                                                <circle cx="12" cy="12" r="10"></circle>
                                            </svg>
                                        </span>
                                    }
                                    else if (ticket.IsRejected)
                                    {
                                        <span class="round text-white hstack justify-content-center text-center rounded-circle text-bg-danger">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x-circle">
                                                <circle cx="12" cy="12" r="10"></circle>
                                                <line x1="15" y1="9" x2="9" y2="15"></line>
                                                <line x1="9" y1="9" x2="15" y2="15"></line>
                                            </svg>
                                        </span>
                                    }
                                    else if (ticket.IsOnHold)
                                    {
                                        <span class="round text-white hstack justify-content-center text-center rounded-circle text-bg-secondary">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-pause-circle">
                                                <circle cx="12" cy="12" r="10"></circle>
                                                <line x1="10" y1="9" x2="10" y2="15"></line>
                                                <line x1="14" y1="9" x2="14" y2="15"></line>
                                            </svg>
                                        </span>
                                    }
                                    else if (ticket.IsSubmitted)
                                    {
                                        <span class="round text-white hstack justify-content-center text-center rounded-circle text-bg-warning">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-clock">
                                                <circle cx="12" cy="12" r="10"></circle>
                                                <polyline points="12 6 12 12 16 14"></polyline>
                                            </svg>
                                        </span>
                                    }
                                    
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>




<!-- Items Modal -->
<div class="modal fade" id="viewItemsModal" tabindex="-1" aria-labelledby="viewItemsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewItemsModalLabel">Items submitted</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Part</th>
                            <th>Quantity</th>
                        </tr>
                    </thead>
                    <tbody id="modalItemsList"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>




<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".view-items").forEach(function (btn) {
            btn.addEventListener("click", function () {
                let itemsJson = this.getAttribute("data-items");

                // Ensure valid JSON parsing
                let items = JSON.parse(itemsJson);
                let modalBody = document.getElementById("modalItemsList");
                modalBody.innerHTML = ""; // Clear previous items

                items.forEach(item => {
                    modalBody.innerHTML += `<tr>
                        <td>${item.Part}</td>
                        <td>${item.Quantity} pcs</td>
                    </tr>`;
                });
            });
        });
    });
</script>
